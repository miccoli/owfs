name: test

on: [push, release]

jobs:

  build:
    runs-on: ${{ matrix.os }}-20.04
    strategy:
      matrix:
        include:
        - os: ubuntu
          env: CC=/usr/bin/clang-9 CXX=/usr/bin/clang++-9
        - os: ubuntu
          env: CC=/usr/bin/gcc-7 CXX=/usr/bin/g++-7
        - os: ubuntu
          env: CC=/usr/bin/gcc-8 CXX=/usr/bin/g++-8
        - os: ubuntu
          env: CC=/usr/bin/gcc-9 CXX=/usr/bin/g++-9
        - os: ubuntu
          env: CC=/usr/bin/gcc-10 CXX=/usr/bin/g++-10
          install: |
            sudo apt-get update
            sudo apt-get install -y gcc-10 g++-10
    steps:
      - name: install
        if: ${{ matrix.install }}
        run: ${{ matrix.install }}
      - run: |
          export ${{ matrix.env }}
          ${CC} --version

  debug-info:
    runs-on: ubuntu-latest
    steps:
      - name: Dump environment
        run: printenv | sort
      - name: Dump env context
        env:
          ENV_CONTEXT: ${{ toJson(env) }}
        run: echo "$ENV_CONTEXT"
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: echo "$MATRIX_CONTEXT"
